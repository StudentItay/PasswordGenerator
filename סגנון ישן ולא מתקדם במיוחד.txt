import tkinter as tk
import random
import string
from tkinter import messagebox, simpledialog
import pyperclip  # ספרייה להעתקת טקסט ללוח (clipboard)
import pyzipper  # ספרייה ליצירת קבצי ZIP עם הצפנה

# פונקציה ליצירת סיסמא
def generate_password(length, include_special):
    """Generate a random password of the given length."""
    characters = string.ascii_letters + string.digits  # Include letters and digits
    if include_special:
        characters += string.punctuation  # Add special characters

    password = ''.join(random.choice(characters) for _ in range(length))
    return password

# פונקציה לטיפול באירוע לחיצה על כפתור "Generate Password"
def on_generate():
    """Handle the generate button click event."""
    try:
        length = int(length_var.get())
        if length < 5 or length > 15:
            raise ValueError("Length must be between 5 and 15")
        
        include_special = special_char_var.get()
        password = generate_password(length, include_special)
        
        # Update the label to display the generated password
        password_label.config(text=password)
        password_label.pack(pady=10)  # Show the password label when a password is generated
    except ValueError as e:
        password_label.config(text=str(e))
        password_label.pack_forget()  # Hide the password label if there's an error

# פונקציה להעתקת הסיסמא ללוח
def copy_to_clipboard():
    """Copy the generated password to the clipboard."""
    password_text = password_label.cget("text")
    if password_text:
        pyperclip.copy(password_text)
        messagebox.showinfo("Copied", "Password copied to clipboard!")
    else:
        messagebox.showwarning("Warning", "No password to copy.")

# פונקציה לשמירת הסיסמא כקובץ טקסט בתוך ZIP עם סיסמה
def save_password():
    """Save the generated password to a text file within a password-protected ZIP file."""
    password = password_label.cget("text")
    if not password:
        messagebox.showwarning("Warning", "No password to save.")
        return

    # בקשת שם קובץ מהמשתמש
    zip_filename = simpledialog.askstring("Input", "Enter the filename for the ZIP file (without extension):")
    if not zip_filename:
        messagebox.showwarning("Warning", "No ZIP filename entered.")
        return

    # בקשת סיסמה עבור קובץ ה-ZIP
    zip_password = simpledialog.askstring("Input", "Enter a password for the ZIP file:", show='*')
    if not zip_password:
        messagebox.showwarning("Warning", "No ZIP password entered.")
        return

    try:
        # יצירת קובץ ZIP עם הצפנה AES והוספת סיסמה
        with pyzipper.AESZipFile(f"{zip_filename}.zip", 'w', compression=pyzipper.ZIP_DEFLATED, encryption=pyzipper.WZ_AES) as zf:
            zf.setpassword(zip_password.encode('utf-8'))
            zf.writestr("generated_password.txt", password)

        # הודעה על הצלחה
        messagebox.showinfo("Success", f"Password saved to '{zip_filename}.zip' as 'generated_password.txt'.\nZIP file is password protected.")
    except Exception as e:
        messagebox.showerror("Error", f"An error occurred while saving: {str(e)}")

# יצירת חלון ראשי
root = tk.Tk()
root.title("Password Generator")
root.geometry("450x400")
root.configure(bg="#2b2b2b")  # רקע כהה

# בחירת אורך הסיסמא
length_var = tk.StringVar(value="5")
length_label = tk.Label(root, text="Select password length (5-15):", bg="#2b2b2b", fg="white", font=("Comic Sans MS", 12))
length_label.pack(pady=10)

length_scale = tk.Scale(root, from_=5, to=15, orient="horizontal", variable=length_var, bg="#2b2b2b", fg="#AAFF00", highlightthickness=0, font=("Arial", 13, "bold"))
length_scale.pack(pady=10)

# אפשרות לתווים מיוחדים
special_char_var = tk.BooleanVar(value=False)
special_char_check = tk.Checkbutton(root, text="Include special characters", variable=special_char_var, bg="#2b2b2b", fg="white", selectcolor="#404040", font=("Arial", 10))
special_char_check.pack(pady=10)

# כפתור יצירת הסיסמא
generate_button = tk.Button(root, text="Generate Password", command=on_generate, bg="#4CAF50", fg="white", font=("Comic Sans MS", 12), width=20)
generate_button.pack(pady=20)

# תווית להציג את הסיסמא (לא נציג אותה בתחילה)
password_label = tk.Label(root, text="", wraplength=300, bg="white", fg="black", font=("Arial", 14, "bold"), relief="solid", borderwidth=2, padx=10, pady=5)

# כפתור להעתקת הסיסמא ללוח
copy_button = tk.Button(root, text="Copy", command=copy_to_clipboard, bg="#4CAF50", fg="white", font=("Comic Sans MS", 12), width=20)
copy_button.pack(pady=10)

# כפתור לשמירת הסיסמא כקובץ טקסט בתוך ZIP
save_button = tk.Button(root, text="Save Password as ZIP", command=save_password, bg="#4CAF50", fg="white", font=("Comic Sans MS", 12), width=20)
save_button.pack(pady=10)

# הפעלת הלולאת Tkinter
root.mainloop()
